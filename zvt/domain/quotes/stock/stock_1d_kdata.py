# -*- coding: utf-8 -*-
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy import Column, Float, Integer
from sqlalchemy.ext.declarative import declarative_base

from zvt.api.data_type import Region, Provider, EntityType
from zvt.domain.quotes import StockKdataCommon
from zvt.contract.register import register_schema

KdataBase = declarative_base()


class Stock1dKdata(KdataBase, StockKdataCommon):
    __tablename__ = 'stock_1d_kdata'

    pre_close = Column(Float)
    # 滚动市盈率
    pe_ttm = Column(Float)
    # 滚动市销率
    ps_ttm = Column(Float)
    # 滚动市现率
    pcf_ncf_ttm = Column(Float)
    # 市净率
    pb_mrq = Column(Float)
    is_st = Column(Integer)


class Stock1dHfqKdata(KdataBase, StockKdataCommon):
    __tablename__ = 'stock_1d_hfq_kdata'

    pre_close = Column(Float)
    # 滚动市盈率
    pe_ttm = Column(Float)
    # 滚动市销率
    ps_ttm = Column(Float)
    # 滚动市现率
    pcf_ncf_ttm = Column(Float)
    # 市净率
    pb_mrq = Column(Float)
    is_st = Column(Integer)


class Stock1dBfqKdata(KdataBase, StockKdataCommon):
    __tablename__ = 'stock_1d_bfq_kdata'

    pre_close = Column(Float)
    # 滚动市盈率
    pe_ttm = Column(Float)
    # 滚动市销率
    ps_ttm = Column(Float)
    # 滚动市现率
    pcf_ncf_ttm = Column(Float)
    # 市净率
    pb_mrq = Column(Float)
    is_st = Column(Integer)


register_schema(regions=[Region.CHN, Region.US],
                providers={Region.CHN: [Provider.JoinQuant, Provider.BaoStock],
                           Region.US: [Provider.Yahoo]},
                db_name='stock_1d_kdata',
                schema_base=KdataBase,
                entity_type=EntityType.Stock)


register_schema(regions=[Region.CHN, Region.US],
                providers={Region.CHN: [Provider.JoinQuant, Provider.BaoStock],
                           Region.US: [Provider.Yahoo]},
                db_name='stock_1d_hfq_kdata',
                schema_base=KdataBase,
                entity_type=EntityType.Stock)


register_schema(regions=[Region.CHN, Region.US],
                providers={Region.CHN: [Provider.JoinQuant, Provider.BaoStock],
                           Region.US: [Provider.Yahoo]},
                db_name='stock_1d_bfq_kdata',
                schema_base=KdataBase,
                entity_type=EntityType.Stock)


# the __all__ is generated
__all__ = ['Stock1dKdata', 'Stock1dHfqKdata', 'Stock1dBfqKdata']
